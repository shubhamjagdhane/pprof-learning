<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.osyield (17 samples, 0.23%)</title><rect x="624.3" y="181" width="2.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="627.30" y="191.5" ></text>
</g>
<g >
<title>gogo (1 samples, 0.01%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1181.4" y="197" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1184.38" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.01%)</title><rect x="288.6" y="165" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="291.62" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.06%)</title><rect x="1181.9" y="181" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1184.87" y="191.5" ></text>
</g>
<g >
<title>runtime.runqsteal (92 samples, 1.27%)</title><rect x="1086.1" y="181" width="15.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1089.13" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.01%)</title><rect x="300.2" y="165" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="303.16" y="175.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.01%)</title><rect x="576.8" y="181" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="579.84" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (8 samples, 0.11%)</title><rect x="552.1" y="213" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="555.13" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (1,321 samples, 18.20%)</title><rect x="627.1" y="165" width="214.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="630.07" y="175.5" >runtime.semasleep</text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.01%)</title><rect x="10.8" y="149" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="13.81" y="159.5" ></text>
</g>
<g >
<title>net/http.appendTime (1 samples, 0.01%)</title><rect x="298.2" y="181" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="301.21" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.01%)</title><rect x="290.7" y="133" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="293.74" y="143.5" ></text>
</g>
<g >
<title>runtime.notesleep (2 samples, 0.03%)</title><rect x="571.3" y="181" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="574.31" y="191.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.01%)</title><rect x="569.0" y="181" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="572.03" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="1172.9" y="133" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1175.93" y="143.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1184.5" y="213" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1187.47" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="293.8" y="181" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="296.82" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1172.9" y="165" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1175.93" y="175.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.01%)</title><rect x="567.4" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="570.41" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (3 samples, 0.04%)</title><rect x="570.2" y="197" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="573.17" y="207.5" ></text>
</g>
<g >
<title>runtime.checkTimersNoP (1 samples, 0.01%)</title><rect x="577.0" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="580.00" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.01%)</title><rect x="568.1" y="181" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="571.06" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="1184.0" y="149" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1186.99" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="1184.5" y="149" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1187.47" y="159.5" ></text>
</g>
<g >
<title>runtime.runqempty (3 samples, 0.04%)</title><rect x="1083.9" y="197" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1086.85" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.06%)</title><rect x="572.8" y="181" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="575.77" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (97 samples, 1.34%)</title><rect x="1173.9" y="261" width="15.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1176.91" y="271.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (17 samples, 0.23%)</title><rect x="297.4" y="213" width="2.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="300.40" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.03%)</title><rect x="1184.1" y="229" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.15" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (9 samples, 0.12%)</title><rect x="571.3" y="213" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="574.31" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="296.1" y="197" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="299.10" y="207.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.04%)</title><rect x="1172.1" y="181" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1175.12" y="191.5" ></text>
</g>
<g >
<title>fmt.Fprintln (2 samples, 0.03%)</title><rect x="554.4" y="181" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="557.40" y="191.5" ></text>
</g>
<g >
<title>runtime.releasep (1 samples, 0.01%)</title><rect x="1083.7" y="197" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1086.69" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1,316 samples, 18.13%)</title><rect x="627.2" y="149" width="214.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="630.23" y="159.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="566.9" y="197" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="569.92" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.01%)</title><rect x="567.1" y="229" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="570.08" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="1181.7" y="213" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1184.71" y="223.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (3,350 samples, 46.15%)</title><rect x="10.2" y="261" width="544.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.16" y="271.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="297.1" y="165" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="300.08" y="175.5" ></text>
</g>
<g >
<title>runtime.makemap (3 samples, 0.04%)</title><rect x="293.0" y="197" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="296.01" y="207.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.01%)</title><rect x="1183.8" y="197" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1186.82" y="207.5" ></text>
</g>
<g >
<title>time.(*Time).sec (1 samples, 0.01%)</title><rect x="296.6" y="213" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="299.59" y="223.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (1 samples, 0.01%)</title><rect x="554.6" y="133" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="557.57" y="143.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.04%)</title><rect x="570.8" y="229" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="573.82" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.01%)</title><rect x="567.4" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="570.41" y="207.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.04%)</title><rect x="574.4" y="197" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="577.40" y="207.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.01%)</title><rect x="290.9" y="181" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="293.90" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.04%)</title><rect x="570.8" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="573.82" y="223.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).upcomingHeaderKeys (1 samples, 0.01%)</title><rect x="292.8" y="197" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="295.85" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListWait (1 samples, 0.01%)</title><rect x="553.8" y="197" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="556.75" y="207.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1,704 samples, 23.47%)</title><rect x="10.7" y="181" width="276.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.65" y="191.5" >net.(*netFD).Read</text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.04%)</title><rect x="573.4" y="213" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="576.42" y="223.5" ></text>
</g>
<g >
<title>net.(*OpError).Timeout (1 samples, 0.01%)</title><rect x="554.7" y="245" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="557.73" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="288.5" y="197" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="291.46" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1173.3" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1176.26" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (3 samples, 0.04%)</title><rect x="1183.0" y="213" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1186.01" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (3 samples, 0.04%)</title><rect x="1183.0" y="197" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1186.01" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="290.9" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="293.90" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (16 samples, 0.22%)</title><rect x="1186.1" y="213" width="2.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1189.10" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1182.8" y="197" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.85" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (2 samples, 0.03%)</title><rect x="1182.5" y="245" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1185.52" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.01%)</title><rect x="293.8" y="165" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="296.82" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (4 samples, 0.06%)</title><rect x="1179.3" y="245" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1182.27" y="255.5" ></text>
</g>
<g >
<title>net/http.(*exactSig).match (1 samples, 0.01%)</title><rect x="297.7" y="165" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="300.73" y="175.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.04%)</title><rect x="552.9" y="149" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="555.94" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.01%)</title><rect x="293.8" y="117" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="296.82" y="127.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.01%)</title><rect x="568.1" y="165" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="571.06" y="175.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="620.4" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="623.40" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (4 samples, 0.06%)</title><rect x="11.0" y="165" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.98" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.08%)</title><rect x="623.3" y="181" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="626.33" y="191.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.01%)</title><rect x="553.6" y="197" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="556.59" y="207.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.03%)</title><rect x="296.3" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="299.26" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.01%)</title><rect x="295.0" y="197" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="297.96" y="207.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (1 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1192.84" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.06%)</title><rect x="1181.9" y="197" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1184.87" y="207.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1,550 samples, 21.35%)</title><rect x="300.2" y="181" width="251.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="303.16" y="191.5" >net.(*netFD).Write</text>
</g>
<g >
<title>runtime.entersyscall_sysmon (6 samples, 0.08%)</title><rect x="1178.3" y="245" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1181.30" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1173.4" y="229" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1176.42" y="239.5" ></text>
</g>
<g >
<title>runtime.madvise (21 samples, 0.29%)</title><rect x="1174.2" y="213" width="3.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1177.23" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.01%)</title><rect x="293.5" y="165" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="296.50" y="175.5" ></text>
</g>
<g >
<title>runtime.goexit0 (10 samples, 0.14%)</title><rect x="573.9" y="245" width="1.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="576.91" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.01%)</title><rect x="290.7" y="181" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="293.74" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (15 samples, 0.21%)</title><rect x="292.0" y="229" width="2.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="295.04" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoal (1 samples, 0.01%)</title><rect x="295.0" y="149" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="297.96" y="159.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.03%)</title><rect x="296.3" y="213" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="299.26" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="1188.5" y="165" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1191.54" y="175.5" ></text>
</g>
<g >
<title>runtime.newproc (4 samples, 0.06%)</title><rect x="296.8" y="229" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="299.75" y="239.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.01%)</title><rect x="568.7" y="133" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="571.71" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (53 samples, 0.73%)</title><rect x="1101.4" y="165" width="8.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1104.41" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (14 samples, 0.19%)</title><rect x="577.2" y="197" width="2.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="580.16" y="207.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (248 samples, 3.42%)</title><rect x="579.8" y="181" width="40.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="582.76" y="191.5" >run..</text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.08%)</title><rect x="569.2" y="197" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="572.20" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (15 samples, 0.21%)</title><rect x="568.2" y="229" width="2.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="571.22" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (55 samples, 0.76%)</title><rect x="1101.1" y="197" width="8.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1104.08" y="207.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.01%)</title><rect x="574.2" y="197" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="577.23" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="566.9" y="213" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="569.92" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptall (2 samples, 0.03%)</title><rect x="1181.1" y="213" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1184.06" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (21 samples, 0.29%)</title><rect x="1174.2" y="245" width="3.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1177.23" y="255.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (1 samples, 0.01%)</title><rect x="299.7" y="165" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="302.68" y="175.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (1 samples, 0.01%)</title><rect x="288.3" y="197" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="291.30" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (239 samples, 3.29%)</title><rect x="579.9" y="117" width="38.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="582.92" y="127.5" >run..</text>
</g>
<g >
<title>net/http.Header.WriteSubset (2 samples, 0.03%)</title><rect x="299.5" y="197" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="302.51" y="207.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.01%)</title><rect x="576.0" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="579.02" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (6 samples, 0.08%)</title><rect x="1178.3" y="213" width="1.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1181.30" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.04%)</title><rect x="293.0" y="181" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="296.01" y="191.5" ></text>
</g>
<g >
<title>net/textproto.validHeaderValueByte (1 samples, 0.01%)</title><rect x="294.3" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="297.31" y="223.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (4 samples, 0.06%)</title><rect x="291.4" y="229" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="294.39" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.01%)</title><rect x="290.9" y="165" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="293.90" y="175.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (2 samples, 0.03%)</title><rect x="568.7" y="149" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="571.71" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (3,666 samples, 50.50%)</title><rect x="575.9" y="229" width="595.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="578.86" y="239.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.(*mspan).heapBits (1 samples, 0.01%)</title><rect x="566.9" y="165" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="569.92" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (2 samples, 0.03%)</title><rect x="571.3" y="197" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="574.31" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.01%)</title><rect x="290.9" y="133" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="293.90" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.01%)</title><rect x="293.8" y="101" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="296.82" y="111.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (1 samples, 0.01%)</title><rect x="298.5" y="165" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="301.54" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pop (1 samples, 0.01%)</title><rect x="579.6" y="181" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="582.60" y="191.5" ></text>
</g>
<g >
<title>net/http.htmlSig.match (2 samples, 0.03%)</title><rect x="297.9" y="165" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="300.89" y="175.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.01%)</title><rect x="555.4" y="181" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="558.38" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.01%)</title><rect x="296.4" y="181" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="299.43" y="191.5" ></text>
</g>
<g >
<title>net/http.readRequest (11 samples, 0.15%)</title><rect x="289.6" y="229" width="1.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="292.60" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="622.8" y="133" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="625.84" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1166.4" y="165" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1169.43" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.01%)</title><rect x="290.9" y="69" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="293.90" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.01%)</title><rect x="568.1" y="245" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="571.06" y="255.5" ></text>
</g>
<g >
<title>net/http.extraHeader.Write (2 samples, 0.03%)</title><rect x="298.4" y="181" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="301.38" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.01%)</title><rect x="287.5" y="117" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="290.48" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.01%)</title><rect x="566.9" y="229" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="569.92" y="239.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.03%)</title><rect x="1182.5" y="197" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1185.52" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.01%)</title><rect x="289.4" y="213" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="292.44" y="223.5" ></text>
</g>
<g >
<title>net/http.fixPragmaCacheControl (1 samples, 0.01%)</title><rect x="289.4" y="229" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="292.44" y="239.5" ></text>
</g>
<g >
<title>runtime.injectglist (270 samples, 3.72%)</title><rect x="579.4" y="197" width="43.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="582.44" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.updateTimerPMask (1 samples, 0.01%)</title><rect x="1083.5" y="181" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1086.53" y="191.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.01%)</title><rect x="288.3" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="291.30" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (18 samples, 0.25%)</title><rect x="1166.8" y="133" width="2.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1169.75" y="143.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.01%)</title><rect x="579.8" y="165" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="582.76" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.01%)</title><rect x="575.7" y="213" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="578.70" y="223.5" ></text>
</g>
<g >
<title>net/url.(*URL).setPath (2 samples, 0.03%)</title><rect x="290.2" y="181" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="293.25" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (347 samples, 4.78%)</title><rect x="1110.0" y="181" width="56.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1113.02" y="191.5" >runti..</text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.03%)</title><rect x="573.4" y="133" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="576.42" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="575.7" y="197" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="578.70" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1171.6" y="165" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1174.63" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (11 samples, 0.15%)</title><rect x="1169.8" y="181" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1172.84" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (11 samples, 0.15%)</title><rect x="1169.8" y="197" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1172.84" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.01%)</title><rect x="1166.4" y="149" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1169.43" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptone (2 samples, 0.03%)</title><rect x="1181.1" y="197" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1184.06" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (19 samples, 0.26%)</title><rect x="1166.8" y="197" width="3.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1169.75" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.06%)</title><rect x="572.8" y="213" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="575.77" y="223.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (1 samples, 0.01%)</title><rect x="292.2" y="165" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="295.20" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.03%)</title><rect x="1182.5" y="213" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1185.52" y="223.5" ></text>
</g>
<g >
<title>github.com/shubhamjagdhane/pprof/handlers.Hello (2 samples, 0.03%)</title><rect x="554.4" y="197" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="557.40" y="207.5" ></text>
</g>
<g >
<title>net/url.shouldEscape (1 samples, 0.01%)</title><rect x="290.4" y="149" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="293.41" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.01%)</title><rect x="288.5" y="181" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="291.46" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.01%)</title><rect x="300.2" y="149" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="303.16" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (4 samples, 0.06%)</title><rect x="1189.0" y="213" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.02" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.03%)</title><rect x="288.8" y="213" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="291.78" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (1 samples, 0.01%)</title><rect x="569.4" y="181" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="572.36" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.01%)</title><rect x="1189.7" y="229" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1192.67" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.04%)</title><rect x="573.4" y="165" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="576.42" y="175.5" ></text>
</g>
<g >
<title>sync/atomic.(*Pointer[go.shape.f21d94aacf67699bcfe39d9a5101b548a380024f35e485e5abf415eb165b07d1]).Store (1 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1192.84" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.03%)</title><rect x="290.9" y="197" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="293.90" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.01%)</title><rect x="555.4" y="213" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="558.38" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="620.1" y="181" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="623.08" y="191.5" ></text>
</g>
<g >
<title>strings.Contains (1 samples, 0.01%)</title><rect x="554.2" y="197" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="557.24" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (1,567 samples, 21.59%)</title><rect x="297.4" y="229" width="254.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="300.40" y="239.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="1179.1" y="197" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1182.11" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.03%)</title><rect x="290.9" y="213" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="293.90" y="223.5" ></text>
</g>
<g >
<title>runtime.gosched_m (1 samples, 0.01%)</title><rect x="575.7" y="245" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="578.70" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1178.1" y="213" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1181.13" y="223.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.01%)</title><rect x="566.8" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="569.76" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (2 samples, 0.03%)</title><rect x="552.6" y="133" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="555.61" y="143.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.01%)</title><rect x="297.2" y="165" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="300.24" y="175.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.01%)</title><rect x="1173.1" y="149" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1176.09" y="159.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (3 samples, 0.04%)</title><rect x="292.4" y="197" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="295.36" y="207.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.01%)</title><rect x="293.3" y="149" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="296.34" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="575.5" y="149" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="578.54" y="159.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.04%)</title><rect x="574.4" y="181" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="577.40" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (5 samples, 0.07%)</title><rect x="568.4" y="197" width="0.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="571.38" y="207.5" ></text>
</g>
<g >
<title>runtime.netpollgoready.goready.func1 (1 samples, 0.01%)</title><rect x="1184.5" y="245" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1187.47" y="255.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (1 samples, 0.01%)</title><rect x="1181.7" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1184.71" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (16 samples, 0.22%)</title><rect x="1186.1" y="197" width="2.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.10" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="293.5" y="181" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="296.50" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (2 samples, 0.03%)</title><rect x="571.3" y="149" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="574.31" y="159.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (5 samples, 0.07%)</title><rect x="296.6" y="245" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="299.59" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="568.1" y="213" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="571.06" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (16 samples, 0.22%)</title><rect x="1186.1" y="229" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1189.10" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1184.1" y="245" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1187.15" y="255.5" ></text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (2 samples, 0.03%)</title><rect x="1188.7" y="245" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1191.70" y="255.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (5 samples, 0.07%)</title><rect x="297.4" y="181" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="300.40" y="191.5" ></text>
</g>
<g >
<title>syscall.read (1,698 samples, 23.39%)</title><rect x="11.6" y="149" width="276.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="14.63" y="159.5" >syscall.read</text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (7 samples, 0.10%)</title><rect x="1179.9" y="165" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1182.92" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (17 samples, 0.23%)</title><rect x="624.3" y="165" width="2.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="627.30" y="175.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (1 samples, 0.01%)</title><rect x="554.4" y="165" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="557.40" y="175.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (5 samples, 0.07%)</title><rect x="553.9" y="229" width="0.8" height="15.0" fill="rgb(239,158,38)" rx="2" ry="2" />
<text  x="556.92" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.06%)</title><rect x="572.8" y="197" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="575.77" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (4 samples, 0.06%)</title><rect x="1181.9" y="213" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1184.87" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (9 samples, 0.12%)</title><rect x="1171.8" y="197" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1174.79" y="207.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.01%)</title><rect x="552.5" y="165" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="555.45" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (3,229 samples, 44.48%)</title><rect x="576.2" y="213" width="524.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="579.19" y="223.5" >runtime.findRunnable</text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="568.9" y="133" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="571.87" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (2 samples, 0.03%)</title><rect x="841.8" y="181" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="844.80" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1172.0" y="149" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1174.96" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.03%)</title><rect x="288.8" y="197" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="291.78" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.01%)</title><rect x="555.4" y="197" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="558.38" y="207.5" ></text>
</g>
<g >
<title>time.now (5 samples, 0.07%)</title><rect x="295.3" y="213" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="298.29" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.03%)</title><rect x="620.1" y="149" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="623.08" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="1189.7" y="261" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1192.67" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.01%)</title><rect x="297.1" y="133" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="300.08" y="143.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (73 samples, 1.01%)</title><rect x="555.1" y="229" width="11.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="558.05" y="239.5" ></text>
</g>
<g >
<title>runtime.preemptone (2 samples, 0.03%)</title><rect x="1183.5" y="197" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1186.50" y="207.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).funcName (1 samples, 0.01%)</title><rect x="573.9" y="197" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="576.91" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (14 samples, 0.19%)</title><rect x="577.2" y="149" width="2.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="580.16" y="159.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (5 samples, 0.07%)</title><rect x="1183.0" y="229" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.01" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="293.8" y="85" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="296.82" y="95.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.01%)</title><rect x="1181.7" y="165" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.71" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (5 samples, 0.07%)</title><rect x="1178.3" y="197" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1181.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pollDesc).setEventErr (1 samples, 0.01%)</title><rect x="843.1" y="181" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="846.10" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1171.8" y="149" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1174.79" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1188.7" y="213" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.70" y="223.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.03%)</title><rect x="287.2" y="85" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="290.16" y="95.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1172.0" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1174.96" y="175.5" ></text>
</g>
<g >
<title>net/url.escape (2 samples, 0.03%)</title><rect x="290.2" y="165" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="293.25" y="175.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (13 samples, 0.18%)</title><rect x="1171.8" y="245" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1174.79" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (17 samples, 0.23%)</title><rect x="567.9" y="261" width="2.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="570.90" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.01%)</title><rect x="555.1" y="213" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="558.05" y="223.5" ></text>
</g>
<g >
<title>runtime.scanstack (4 samples, 0.06%)</title><rect x="568.4" y="165" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="571.38" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.01%)</title><rect x="555.1" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="558.05" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.04%)</title><rect x="293.0" y="165" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="296.01" y="175.5" ></text>
</g>
<g >
<title>net/http.(*transferReader).parseTransferEncoding (1 samples, 0.01%)</title><rect x="289.9" y="197" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="292.92" y="207.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (4 samples, 0.06%)</title><rect x="296.8" y="197" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="299.75" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.08%)</title><rect x="623.3" y="165" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="626.33" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrain (4 samples, 0.06%)</title><rect x="1179.3" y="229" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1182.27" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.01%)</title><rect x="566.8" y="165" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="569.76" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.01%)</title><rect x="296.6" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="299.59" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.04%)</title><rect x="1172.1" y="165" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.12" y="175.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.01%)</title><rect x="576.0" y="197" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="579.02" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="290.7" y="165" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="293.74" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.01%)</title><rect x="568.2" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="571.22" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (4 samples, 0.06%)</title><rect x="568.4" y="181" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="571.38" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1184.0" y="213" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1186.99" y="223.5" ></text>
</g>
<g >
<title>bytes.Cut (2 samples, 0.03%)</title><rect x="292.0" y="197" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="295.04" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.03%)</title><rect x="1171.8" y="181" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1174.79" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (2 samples, 0.03%)</title><rect x="299.5" y="181" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="302.51" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.01%)</title><rect x="293.8" y="69" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="296.82" y="79.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (4 samples, 0.06%)</title><rect x="11.0" y="149" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="13.98" y="159.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.03%)</title><rect x="1183.5" y="181" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1186.50" y="191.5" ></text>
</g>
<g >
<title>runtime.stealWork (103 samples, 1.42%)</title><rect x="1084.3" y="197" width="16.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1087.34" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.01%)</title><rect x="290.9" y="85" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="293.90" y="95.5" ></text>
</g>
<g >
<title>net/url.escape (2 samples, 0.03%)</title><rect x="553.9" y="181" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="556.92" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1166.4" y="197" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1169.43" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1181.7" y="181" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1184.71" y="191.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="569.0" y="165" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="572.03" y="175.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.04%)</title><rect x="298.9" y="181" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="301.86" y="191.5" ></text>
</g>
<g >
<title>runtime.signalM (4 samples, 0.06%)</title><rect x="1179.3" y="165" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1182.27" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="297.2" y="181" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="300.24" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="1169.7" y="133" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1172.68" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.01%)</title><rect x="555.1" y="197" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="558.05" y="207.5" ></text>
</g>
<g >
<title>syscall.syscall (1,698 samples, 23.39%)</title><rect x="11.6" y="133" width="276.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="14.63" y="143.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.osyield (9 samples, 0.12%)</title><rect x="1184.6" y="213" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.64" y="223.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.03%)</title><rect x="1188.7" y="229" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.70" y="239.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.01%)</title><rect x="292.5" y="133" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="295.52" y="143.5" ></text>
</g>
<g >
<title>net.wrapSyscallError (1 samples, 0.01%)</title><rect x="287.6" y="181" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="290.65" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (15 samples, 0.21%)</title><rect x="568.2" y="213" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="571.22" y="223.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (3 samples, 0.04%)</title><rect x="296.1" y="245" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="299.10" y="255.5" ></text>
</g>
<g >
<title>runtime.kevent (4 samples, 0.06%)</title><rect x="574.9" y="181" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="577.88" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="575.5" y="213" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="578.54" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (8 samples, 0.11%)</title><rect x="618.8" y="117" width="1.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="621.78" y="127.5" ></text>
</g>
<g >
<title>runtime.resetspinning (21 samples, 0.29%)</title><rect x="1166.4" y="213" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1169.43" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (1 samples, 0.01%)</title><rect x="295.0" y="133" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="297.96" y="143.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (25 samples, 0.34%)</title><rect x="1184.6" y="245" width="4.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1187.64" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="573.7" y="133" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="576.75" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.01%)</title><rect x="295.1" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="298.12" y="191.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (1 samples, 0.01%)</title><rect x="287.8" y="197" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="290.81" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1184.0" y="165" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1186.99" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="294.1" y="181" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="297.15" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1171.6" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1174.63" y="207.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (5 samples, 0.07%)</title><rect x="553.9" y="245" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="556.92" y="255.5" ></text>
</g>
<g >
<title>runtime.gdestroy (2 samples, 0.03%)</title><rect x="573.9" y="229" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="576.91" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1173.3" y="165" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1176.26" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.03%)</title><rect x="1188.7" y="181" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1191.70" y="191.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (14 samples, 0.19%)</title><rect x="292.0" y="213" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="295.04" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.03%)</title><rect x="620.1" y="165" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="623.08" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="296.1" y="213" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="299.10" y="223.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.01%)</title><rect x="568.5" y="101" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="571.55" y="111.5" ></text>
</g>
<g >
<title>runtime.mapdelete (1 samples, 0.01%)</title><rect x="288.0" y="197" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="290.97" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1173.1" y="133" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1176.09" y="143.5" ></text>
</g>
<g >
<title>runtime.funcname (1 samples, 0.01%)</title><rect x="573.9" y="213" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="576.91" y="223.5" ></text>
</g>
<g >
<title>runtime.netpoll (1,483 samples, 20.43%)</title><rect x="842.1" y="197" width="241.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="845.13" y="207.5" >runtime.netpoll</text>
</g>
<g >
<title>runtime.mPark (1,321 samples, 18.20%)</title><rect x="627.1" y="197" width="214.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="630.07" y="207.5" >runtime.mPark</text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1171.6" y="213" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1174.63" y="223.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.03%)</title><rect x="1172.6" y="165" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1175.61" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.01%)</title><rect x="567.1" y="181" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="570.08" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.03%)</title><rect x="1172.6" y="181" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1175.61" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (7 samples, 0.10%)</title><rect x="1179.9" y="181" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1182.92" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="1173.7" y="213" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1176.74" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.01%)</title><rect x="1171.8" y="117" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1174.79" y="127.5" ></text>
</g>
<g >
<title>all (7,259 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.mcall (3,698 samples, 50.94%)</title><rect x="570.7" y="261" width="601.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="573.66" y="271.5" >runtime.mcall</text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.01%)</title><rect x="555.2" y="197" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="558.22" y="207.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="295.1" y="197" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="298.12" y="207.5" ></text>
</g>
<g >
<title>runtime.morestack (13 samples, 0.18%)</title><rect x="1171.8" y="261" width="2.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1174.79" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.01%)</title><rect x="293.8" y="37" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="296.82" y="47.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="291.5" y="197" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="294.55" y="207.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (10 samples, 0.14%)</title><rect x="1171.8" y="229" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1174.79" y="239.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (1 samples, 0.01%)</title><rect x="299.4" y="181" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="302.35" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (14 samples, 0.19%)</title><rect x="577.2" y="165" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="580.16" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (16 samples, 0.22%)</title><rect x="1186.1" y="181" width="2.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1189.10" y="191.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.01%)</title><rect x="1083.5" y="197" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1086.53" y="207.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.04%)</title><rect x="296.1" y="229" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="299.10" y="239.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (12 samples, 0.17%)</title><rect x="297.4" y="197" width="2.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="300.40" y="207.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (4 samples, 0.06%)</title><rect x="287.8" y="245" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="290.81" y="255.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (11 samples, 0.15%)</title><rect x="1179.9" y="245" width="1.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1182.92" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (70 samples, 0.96%)</title><rect x="555.5" y="181" width="11.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="558.54" y="191.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.03%)</title><rect x="287.2" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="290.16" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_reacquired (1 samples, 0.01%)</title><rect x="552.0" y="85" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="554.96" y="95.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1181.4" y="229" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1184.38" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (11 samples, 0.15%)</title><rect x="1169.8" y="165" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1172.84" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="568.5" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="571.55" y="127.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1171.8" y="165" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1174.79" y="175.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.01%)</title><rect x="298.7" y="181" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="301.70" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="288.5" y="213" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="291.46" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1181.5" y="197" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1184.55" y="207.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (4 samples, 0.06%)</title><rect x="291.4" y="213" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="294.39" y="223.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.01%)</title><rect x="1183.8" y="213" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1186.82" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.01%)</title><rect x="552.0" y="117" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="554.96" y="127.5" ></text>
</g>
<g >
<title>runtime.bgsweep (5 samples, 0.07%)</title><rect x="567.1" y="261" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="570.08" y="271.5" ></text>
</g>
<g >
<title>syscall.Read (70 samples, 0.96%)</title><rect x="555.5" y="213" width="11.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="558.54" y="223.5" ></text>
</g>
<g >
<title>runtime.kevent (1,475 samples, 20.32%)</title><rect x="843.3" y="181" width="239.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="846.27" y="191.5" >runtime.kevent</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1166.4" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1169.43" y="191.5" ></text>
</g>
<g >
<title>bytes.Equal (1 samples, 0.01%)</title><rect x="297.6" y="165" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="300.56" y="175.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.01%)</title><rect x="288.1" y="197" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="291.13" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (2 samples, 0.03%)</title><rect x="292.5" y="165" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="295.52" y="175.5" ></text>
</g>
<g >
<title>runtime.readUintptr (1 samples, 0.01%)</title><rect x="569.5" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="572.52" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1184.0" y="197" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1186.99" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (6 samples, 0.08%)</title><rect x="1182.8" y="245" width="1.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1185.85" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1172.9" y="149" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1175.93" y="159.5" ></text>
</g>
<g >
<title>runtime.releasepNoTrace (1 samples, 0.01%)</title><rect x="1083.7" y="181" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1086.69" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.01%)</title><rect x="566.9" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="569.92" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (347 samples, 4.78%)</title><rect x="1110.0" y="197" width="56.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1113.02" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1182.8" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1185.85" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.01%)</title><rect x="293.8" y="197" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="296.82" y="207.5" ></text>
</g>
<g >
<title>syscall.syscall (1,549 samples, 21.34%)</title><rect x="300.3" y="133" width="251.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="303.33" y="143.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.gcStart.func3 (2 samples, 0.03%)</title><rect x="1183.8" y="245" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1186.82" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.04%)</title><rect x="573.4" y="197" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="576.42" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="552.5" y="149" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="555.45" y="159.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (11 samples, 0.15%)</title><rect x="552.1" y="229" width="1.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="555.13" y="239.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.01%)</title><rect x="574.1" y="213" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="577.07" y="223.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (1,578 samples, 21.74%)</title><rect x="297.4" y="245" width="256.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="300.40" y="255.5" >net/http.(*response).finishRequest</text>
</g>
<g >
<title>runtime.gostartcallfn (2 samples, 0.03%)</title><rect x="296.8" y="165" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="299.75" y="175.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.01%)</title><rect x="566.8" y="133" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="569.76" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="298.9" y="149" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="301.86" y="159.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.01%)</title><rect x="297.2" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="300.24" y="159.5" ></text>
</g>
<g >
<title>runtime.mPark (14 samples, 0.19%)</title><rect x="577.2" y="181" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="580.16" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.01%)</title><rect x="570.0" y="181" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="573.01" y="191.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1,706 samples, 23.50%)</title><rect x="10.5" y="197" width="277.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.49" y="207.5" >net.(*conn).Read</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="567.1" y="213" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.08" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (16 samples, 0.22%)</title><rect x="571.3" y="229" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="574.31" y="239.5" ></text>
</g>
<g >
<title>runtime.pMask.set (1 samples, 0.01%)</title><rect x="579.8" y="149" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="582.76" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1178.1" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1181.13" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="297.1" y="149" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="300.08" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.06%)</title><rect x="296.8" y="213" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="299.75" y="223.5" ></text>
</g>
<g >
<title>time.Until (5 samples, 0.07%)</title><rect x="552.6" y="181" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="555.61" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (4 samples, 0.06%)</title><rect x="1181.9" y="245" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1184.87" y="255.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.01%)</title><rect x="575.5" y="229" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="578.54" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (14 samples, 0.19%)</title><rect x="620.6" y="133" width="2.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="623.56" y="143.5" ></text>
</g>
<g >
<title>runtime.schedule (10 samples, 0.14%)</title><rect x="1171.8" y="213" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1174.79" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.03%)</title><rect x="552.6" y="149" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="555.61" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (4 samples, 0.06%)</title><rect x="841.2" y="149" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="844.15" y="159.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (3 samples, 0.04%)</title><rect x="1177.6" y="229" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1180.65" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.04%)</title><rect x="573.4" y="181" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="576.42" y="191.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.01%)</title><rect x="568.5" y="133" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="571.55" y="143.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.01%)</title><rect x="1173.1" y="165" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1176.09" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.01%)</title><rect x="568.1" y="133" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="571.06" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (1 samples, 0.01%)</title><rect x="295.0" y="165" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="297.96" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.01%)</title><rect x="291.1" y="181" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="294.06" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (53 samples, 0.73%)</title><rect x="1101.4" y="181" width="8.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1104.41" y="191.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.01%)</title><rect x="297.6" y="149" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="300.56" y="159.5" ></text>
</g>
<g >
<title>runtime.park_m (3,666 samples, 50.50%)</title><rect x="575.9" y="245" width="595.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="578.86" y="255.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.notewakeup (247 samples, 3.40%)</title><rect x="579.9" y="149" width="40.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="582.92" y="159.5" >run..</text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="290.7" y="149" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="293.74" y="159.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.03%)</title><rect x="299.0" y="149" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="302.03" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="575.7" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="578.70" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.01%)</title><rect x="288.9" y="165" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="291.95" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="1189.7" y="245" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.67" y="255.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (1 samples, 0.01%)</title><rect x="554.2" y="165" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="557.24" y="175.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.01%)</title><rect x="1178.1" y="245" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1181.13" y="255.5" ></text>
</g>
<g >
<title>context.removeChild (2 samples, 0.03%)</title><rect x="287.8" y="213" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="290.81" y="223.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.03%)</title><rect x="294.0" y="197" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="296.99" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.01%)</title><rect x="295.0" y="181" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="297.96" y="191.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.01%)</title><rect x="287.8" y="181" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="290.81" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (4 samples, 0.06%)</title><rect x="1189.0" y="245" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1192.02" y="255.5" ></text>
</g>
<g >
<title>runtime.preemptall (2 samples, 0.03%)</title><rect x="1183.5" y="213" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1186.50" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (17 samples, 0.23%)</title><rect x="620.6" y="149" width="2.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="623.56" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.04%)</title><rect x="574.4" y="165" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="577.40" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1184.0" y="181" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1186.99" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.01%)</title><rect x="567.1" y="197" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="570.08" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.03%)</title><rect x="1173.4" y="197" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1176.42" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.01%)</title><rect x="1184.5" y="229" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1187.47" y="239.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.01%)</title><rect x="288.9" y="181" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="291.95" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (1 samples, 0.01%)</title><rect x="554.6" y="165" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="557.57" y="175.5" ></text>
</g>
<g >
<title>net/url.getScheme (1 samples, 0.01%)</title><rect x="290.6" y="181" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="293.57" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (17 samples, 0.23%)</title><rect x="620.6" y="165" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="623.56" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.01%)</title><rect x="568.9" y="117" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="571.87" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.04%)</title><rect x="570.8" y="181" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="573.82" y="191.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.01%)</title><rect x="288.6" y="181" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="291.62" y="191.5" ></text>
</g>
<g >
<title>runtime.walltime (3 samples, 0.04%)</title><rect x="552.9" y="133" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="555.94" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.01%)</title><rect x="555.2" y="213" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="558.22" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1181.4" y="213" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1184.38" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.01%)</title><rect x="567.4" y="229" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="570.41" y="239.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (4 samples, 0.06%)</title><rect x="11.0" y="133" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.98" y="143.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (8 samples, 0.11%)</title><rect x="552.1" y="197" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="555.13" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1178.1" y="197" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1181.13" y="207.5" ></text>
</g>
<g >
<title>net.(*conn).ok (1 samples, 0.01%)</title><rect x="553.4" y="213" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="556.43" y="223.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.01%)</title><rect x="554.2" y="181" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="557.24" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (8 samples, 0.11%)</title><rect x="574.2" y="229" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="577.23" y="239.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.03%)</title><rect x="299.0" y="165" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="302.03" y="175.5" ></text>
</g>
<g >
<title>net/url.(*URL).EscapedPath (2 samples, 0.03%)</title><rect x="553.9" y="197" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="556.92" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="1181.5" y="213" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1184.55" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1173.3" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1176.26" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.04%)</title><rect x="1172.1" y="149" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1175.12" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.01%)</title><rect x="10.8" y="165" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="13.81" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.03%)</title><rect x="295.0" y="213" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="297.96" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (7 samples, 0.10%)</title><rect x="1179.9" y="197" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1182.92" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="298.9" y="165" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="301.86" y="175.5" ></text>
</g>
<g >
<title>net/http.(*response).write (1 samples, 0.01%)</title><rect x="554.6" y="149" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="557.57" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.01%)</title><rect x="293.8" y="133" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="296.82" y="143.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.01%)</title><rect x="568.5" y="149" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="571.55" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1182.8" y="213" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.85" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.03%)</title><rect x="1184.1" y="213" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1187.15" y="223.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="1173.7" y="229" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1176.74" y="239.5" ></text>
</g>
<g >
<title>net/http.readTransfer (1 samples, 0.01%)</title><rect x="289.9" y="213" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="292.92" y="223.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (2 samples, 0.03%)</title><rect x="554.4" y="213" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="557.40" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="620.4" y="165" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="623.40" y="175.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (2 samples, 0.03%)</title><rect x="552.3" y="181" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="555.29" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="1184.5" y="165" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1187.47" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (247 samples, 3.40%)</title><rect x="579.9" y="133" width="40.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="582.92" y="143.5" >run..</text>
</g>
<g >
<title>runtime.(*gcControllerState).markWorkerStop (1 samples, 0.01%)</title><rect x="567.9" y="245" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="570.90" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="575.5" y="181" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="578.54" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (3 samples, 0.04%)</title><rect x="1183.0" y="165" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1186.01" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (4 samples, 0.06%)</title><rect x="1179.3" y="213" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1182.27" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.03%)</title><rect x="1183.8" y="229" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1186.82" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).CompareAndSwap (2 samples, 0.03%)</title><rect x="11.0" y="117" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.98" y="127.5" ></text>
</g>
<g >
<title>runtime.interequal (1 samples, 0.01%)</title><rect x="288.0" y="181" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="290.97" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.get (2 samples, 0.03%)</title><rect x="299.8" y="197" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="302.84" y="207.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.01%)</title><rect x="567.9" y="229" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="570.90" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.04%)</title><rect x="573.4" y="149" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="576.42" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.01%)</title><rect x="300.0" y="181" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="303.00" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (4 samples, 0.06%)</title><rect x="1179.3" y="149" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1182.27" y="159.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (1,707 samples, 23.52%)</title><rect x="10.3" y="245" width="277.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.33" y="255.5" >bufio.(*Reader).Peek</text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.03%)</title><rect x="287.2" y="117" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="290.16" y="127.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (19 samples, 0.26%)</title><rect x="570.8" y="245" width="3.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="573.82" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (4 samples, 0.06%)</title><rect x="1189.0" y="197" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1192.02" y="207.5" ></text>
</g>
<g >
<title>time.Now (5 samples, 0.07%)</title><rect x="552.6" y="165" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="555.61" y="175.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.HeaderValuesContainsToken (1 samples, 0.01%)</title><rect x="291.2" y="213" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="294.22" y="223.5" ></text>
</g>
<g >
<title>net/url.parse (5 samples, 0.07%)</title><rect x="290.1" y="197" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="293.09" y="207.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (4 samples, 0.06%)</title><rect x="287.8" y="229" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="290.81" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (23 samples, 0.32%)</title><rect x="623.3" y="197" width="3.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="626.33" y="207.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (2 samples, 0.03%)</title><rect x="553.6" y="213" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="556.59" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.03%)</title><rect x="1182.5" y="229" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1185.52" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (4 samples, 0.06%)</title><rect x="1181.9" y="229" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.87" y="239.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.03%)</title><rect x="292.5" y="149" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="295.52" y="159.5" ></text>
</g>
<g >
<title>runtime.kevent (7 samples, 0.10%)</title><rect x="571.6" y="181" width="1.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="574.63" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (9 samples, 0.12%)</title><rect x="1184.6" y="197" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1187.64" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="569.0" y="149" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="572.03" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.01%)</title><rect x="10.7" y="165" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="13.65" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (90 samples, 1.24%)</title><rect x="1086.5" y="149" width="14.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1089.45" y="159.5" ></text>
</g>
<g >
<title>runtime.save_g (1 samples, 0.01%)</title><rect x="552.5" y="133" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="555.45" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (15 samples, 0.21%)</title><rect x="1186.1" y="165" width="2.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1189.10" y="175.5" ></text>
</g>
<g >
<title>runtime.pMask.read (1 samples, 0.01%)</title><rect x="1083.4" y="197" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1086.36" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.01%)</title><rect x="289.9" y="181" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="292.92" y="191.5" ></text>
</g>
<g >
<title>syscall.Write (1,549 samples, 21.34%)</title><rect x="300.3" y="165" width="251.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="303.33" y="175.5" >syscall.Write</text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.01%)</title><rect x="568.1" y="101" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="571.06" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1184.5" y="197" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1187.47" y="207.5" ></text>
</g>
<g >
<title>runtime.runqgrab (91 samples, 1.25%)</title><rect x="1086.3" y="165" width="14.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1089.29" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (6 samples, 0.08%)</title><rect x="623.3" y="149" width="1.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="626.33" y="159.5" ></text>
</g>
<g >
<title>context.withCancel (3 samples, 0.04%)</title><rect x="288.6" y="229" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="291.62" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.01%)</title><rect x="575.5" y="165" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="578.54" y="175.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.01%)</title><rect x="1181.7" y="229" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1184.71" y="239.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.01%)</title><rect x="288.8" y="181" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="291.78" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.04%)</title><rect x="574.4" y="149" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="577.40" y="159.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (1,706 samples, 23.50%)</title><rect x="10.5" y="213" width="277.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.49" y="223.5" >net/http.(*connReader).Read</text>
</g>
<g >
<title>runtime.unlock2 (4 samples, 0.06%)</title><rect x="1189.0" y="229" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.02" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).Swap (2 samples, 0.03%)</title><rect x="11.3" y="117" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="14.30" y="127.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.01%)</title><rect x="299.4" y="165" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="302.35" y="175.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.03%)</title><rect x="1173.4" y="213" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1176.42" y="223.5" ></text>
</g>
<g >
<title>runtime.checkRunqsNoP (4 samples, 0.06%)</title><rect x="576.3" y="197" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="579.35" y="207.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (1 samples, 0.01%)</title><rect x="1083.2" y="197" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1086.20" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1171.8" y="133" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1174.79" y="143.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.06%)</title><rect x="574.9" y="197" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="577.88" y="207.5" ></text>
</g>
<g >
<title>runtime.read (1 samples, 0.01%)</title><rect x="1083.0" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1086.04" y="191.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1,550 samples, 21.35%)</title><rect x="300.2" y="197" width="251.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="303.16" y="207.5" >net.(*conn).Write</text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.01%)</title><rect x="568.1" y="149" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="571.06" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1184.5" y="181" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1187.47" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (5 samples, 0.07%)</title><rect x="567.1" y="245" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="570.08" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (402 samples, 5.54%)</title><rect x="1101.1" y="213" width="65.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1104.08" y="223.5" >runtime..</text>
</g>
<g >
<title>runtime.write (1 samples, 0.01%)</title><rect x="1083.2" y="181" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1086.20" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptone (4 samples, 0.06%)</title><rect x="1179.3" y="181" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1182.27" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 0.10%)</title><rect x="1179.9" y="213" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.92" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.01%)</title><rect x="290.9" y="101" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="293.90" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.01%)</title><rect x="293.8" y="53" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="296.82" y="63.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (2 samples, 0.03%)</title><rect x="292.5" y="181" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="295.52" y="191.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (2 samples, 0.03%)</title><rect x="289.1" y="229" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="292.11" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (5 samples, 0.07%)</title><rect x="295.3" y="197" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="298.29" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (4 samples, 0.06%)</title><rect x="1179.3" y="197" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1182.27" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.01%)</title><rect x="552.0" y="101" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="554.96" y="111.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.01%)</title><rect x="575.7" y="229" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="578.70" y="239.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).findHandler (3 samples, 0.04%)</title><rect x="553.9" y="213" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="556.92" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="1172.0" y="133" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1174.96" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (2 samples, 0.03%)</title><rect x="1183.5" y="165" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1186.50" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (6 samples, 0.08%)</title><rect x="1178.3" y="229" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1181.30" y="239.5" ></text>
</g>
<g >
<title>runtime.semacreate (1 samples, 0.01%)</title><rect x="1101.2" y="181" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1104.24" y="191.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (76 samples, 1.05%)</title><rect x="554.7" y="261" width="12.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="557.73" y="271.5" ></text>
</g>
<g >
<title>runtime.madvise (3 samples, 0.04%)</title><rect x="1177.6" y="213" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1180.65" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (3 samples, 0.04%)</title><rect x="1177.6" y="245" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1180.65" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (9 samples, 0.12%)</title><rect x="1184.6" y="229" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1187.64" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1166.6" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1169.59" y="191.5" ></text>
</g>
<g >
<title>runtime.limiterEventStamp.duration (1 samples, 0.01%)</title><rect x="576.8" y="149" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="579.84" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (247 samples, 3.40%)</title><rect x="579.9" y="165" width="40.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="582.92" y="175.5" >run..</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.03%)</title><rect x="291.7" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="294.71" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (17 samples, 0.23%)</title><rect x="620.6" y="181" width="2.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="623.56" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (14 samples, 0.19%)</title><rect x="577.2" y="133" width="2.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="580.16" y="143.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (21 samples, 0.29%)</title><rect x="1174.2" y="229" width="3.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.23" y="239.5" ></text>
</g>
<g >
<title>syscall.read (70 samples, 0.96%)</title><rect x="555.5" y="197" width="11.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="558.54" y="207.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.01%)</title><rect x="1172.9" y="181" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1175.93" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (1 samples, 0.01%)</title><rect x="568.1" y="197" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="571.06" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="294.8" y="213" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="297.80" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.04%)</title><rect x="1183.0" y="181" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1186.01" y="191.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.01%)</title><rect x="576.0" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="579.02" y="223.5" ></text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.01%)</title><rect x="294.8" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="297.80" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1,321 samples, 18.20%)</title><rect x="627.1" y="181" width="214.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="630.07" y="191.5" >runtime.notesleep</text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="1181.5" y="229" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1184.55" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.03%)</title><rect x="571.3" y="165" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="574.31" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.01%)</title><rect x="568.2" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="571.22" y="207.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.01%)</title><rect x="576.8" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="579.84" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.01%)</title><rect x="568.1" y="229" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="571.06" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (19 samples, 0.26%)</title><rect x="1166.8" y="149" width="3.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1169.75" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).Load (1 samples, 0.01%)</title><rect x="567.2" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="570.24" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="1171.6" y="149" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1174.63" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.01%)</title><rect x="293.8" y="149" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="296.82" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.01%)</title><rect x="288.5" y="245" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="291.46" y="255.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (46 samples, 0.63%)</title><rect x="288.6" y="245" width="7.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="291.62" y="255.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (1,706 samples, 23.50%)</title><rect x="10.5" y="229" width="277.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.49" y="239.5" >bufio.(*Reader).fill</text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.01%)</title><rect x="288.1" y="213" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="291.13" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="1181.7" y="197" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1184.71" y="207.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.03%)</title><rect x="1181.1" y="181" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1184.06" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (8 samples, 0.11%)</title><rect x="574.2" y="213" width="1.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="577.23" y="223.5" ></text>
</g>
<g >
<title>syscall.Read (1,698 samples, 23.39%)</title><rect x="11.6" y="165" width="276.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="14.63" y="175.5" >syscall.Read</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1171.6" y="181" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1174.63" y="191.5" ></text>
</g>
<g >
<title>bytes.Index (1 samples, 0.01%)</title><rect x="292.0" y="181" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="295.04" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (2 samples, 0.03%)</title><rect x="569.7" y="181" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="572.68" y="191.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.01%)</title><rect x="575.5" y="245" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="578.54" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.03%)</title><rect x="1188.7" y="197" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.70" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.01%)</title><rect x="292.2" y="181" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="295.20" y="191.5" ></text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.01%)</title><rect x="1173.1" y="181" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1176.09" y="191.5" ></text>
</g>
<g >
<title>time.Now (5 samples, 0.07%)</title><rect x="295.3" y="229" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="298.29" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (11 samples, 0.15%)</title><rect x="1169.8" y="213" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1172.84" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.01%)</title><rect x="567.6" y="229" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="570.57" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.01%)</title><rect x="1181.5" y="181" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.55" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (19 samples, 0.26%)</title><rect x="1166.8" y="181" width="3.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1169.75" y="191.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.01%)</title><rect x="293.5" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="296.50" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.01%)</title><rect x="295.9" y="181" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="298.94" y="191.5" ></text>
</g>
<g >
<title>runtime.(*bmap).overflow (2 samples, 0.03%)</title><rect x="294.5" y="229" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="297.47" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.01%)</title><rect x="293.7" y="197" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="296.66" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (1 samples, 0.01%)</title><rect x="567.2" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="570.24" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.04%)</title><rect x="1172.1" y="133" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1175.12" y="143.5" ></text>
</g>
<g >
<title>runtime.gostartcall (2 samples, 0.03%)</title><rect x="296.8" y="149" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="299.75" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.01%)</title><rect x="567.7" y="229" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="570.73" y="239.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (1,550 samples, 21.35%)</title><rect x="300.2" y="213" width="251.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="303.16" y="223.5" >net/http.checkConnErrorWriter.Write</text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.01%)</title><rect x="299.7" y="149" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="302.68" y="159.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (5 samples, 0.07%)</title><rect x="290.1" y="213" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="293.09" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="575.5" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="578.54" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.01%)</title><rect x="10.7" y="149" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.65" y="159.5" ></text>
</g>
<g >
<title>runtime.newproc1 (3 samples, 0.04%)</title><rect x="296.8" y="181" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="299.75" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.Get (1 samples, 0.01%)</title><rect x="299.4" y="197" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="302.35" y="207.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).propagateCancel (1 samples, 0.01%)</title><rect x="288.6" y="213" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="291.62" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (15 samples, 0.21%)</title><rect x="568.2" y="245" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="571.22" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.01%)</title><rect x="568.1" y="117" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="571.06" y="127.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (9 samples, 0.12%)</title><rect x="1179.9" y="229" width="1.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1182.92" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (4 samples, 0.06%)</title><rect x="1181.9" y="165" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.87" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1166.6" y="165" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1169.59" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.01%)</title><rect x="290.9" y="117" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="293.90" y="127.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.01%)</title><rect x="288.5" y="229" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="291.46" y="239.5" ></text>
</g>
<g >
<title>syscall.write (1,549 samples, 21.34%)</title><rect x="300.3" y="149" width="251.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="303.33" y="159.5" >syscall.write</text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.01%)</title><rect x="1083.2" y="165" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1086.20" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (2 samples, 0.03%)</title><rect x="1181.1" y="165" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1184.06" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (7 samples, 0.10%)</title><rect x="571.6" y="197" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="574.63" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.03%)</title><rect x="295.0" y="229" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="297.96" y="239.5" ></text>
</g>
<g >
<title>runtime.alignUp (1 samples, 0.01%)</title><rect x="294.0" y="181" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="296.99" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.03%)</title><rect x="841.8" y="197" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="844.80" y="207.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (1 samples, 0.01%)</title><rect x="292.7" y="133" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="295.69" y="143.5" ></text>
</g>
<g >
<title>net.(*conn).Read (75 samples, 1.03%)</title><rect x="554.9" y="245" width="12.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="557.89" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (19 samples, 0.26%)</title><rect x="1166.8" y="165" width="3.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1169.75" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.04%)</title><rect x="570.8" y="197" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="573.82" y="207.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.01%)</title><rect x="288.6" y="197" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="291.62" y="207.5" ></text>
</g>
</g>
</svg>
